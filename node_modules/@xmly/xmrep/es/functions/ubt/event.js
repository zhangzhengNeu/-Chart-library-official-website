import { __assign } from "tslib";
import report from '../../share/report';
import { formatTimeData } from '../../share/data';
import { info } from '../../share/app';
import { get as getCache } from '../../share/cache';
import { repTypes } from '../../config';
import { isDev } from '../../utils/env';
import { UBT_PAGE_VIEW_CACHE_KEY } from './constants';
/** 通用ubt上报 */
export default function event(metaId, serviceId, extra, force) {
    for (var key in extra) {
        var ty = typeof extra[key];
        if (ty !== 'string' && ty !== 'number' && ty !== 'undefined' && isDev()) {
            throw new Error("[XLog-ERR] event props('" + key + "') type should be string or number, but got '" + ty + "'");
        }
    }
    report({
        type: repTypes.UBT,
        subType: serviceId,
        data: [formatTimeData({
                metaId: metaId,
                serviceId: serviceId,
                isManual: this && this.__auto ? false : true,
                seq: info.seq,
                sessionId: info.sessionId,
                props: serviceId !== repTypes.UBT.subTypes.PAGE_VIEW ? __assign(__assign({}, getCache(UBT_PAGE_VIEW_CACHE_KEY)), extra) : extra,
            })],
    }, force);
}
