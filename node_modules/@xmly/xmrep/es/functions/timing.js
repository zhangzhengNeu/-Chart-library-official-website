import report from '../share/report';
import { formatTimeData } from '../share/data';
import { cleanUrl, cleanWhiteList, cleanTime } from '../share/clean';
import { repTypes, networkInterval } from '../config';
/**
 * 监控页面、资源（静态资源、api接口）网络情况
 */
var ResourceTiming = /** @class */ (function () {
    function ResourceTiming(config) {
        this.whiteList = [];
        this.maxQueueLength = 0;
        this.offset = 0;
        this.timings = [];
        this.maxQueueLength = config.maxQueueLength;
        this.whiteList = config.whiteList;
    }
    ResourceTiming.prototype.start = function () {
        var _this = this;
        if (this.checkAvailable()) {
            window.addEventListener('load', function () {
                setTimeout(function () {
                    _this.collect();
                }, networkInterval);
            });
        }
    };
    ResourceTiming.prototype.checkAvailable = function () {
        return !!(window.performance
            && window.performance.getEntries
            && window.performance.getEntriesByType
            && window.addEventListener);
    };
    // 收集数据
    ResourceTiming.prototype.collect = function () {
        var _this = this;
        var times = this.getTimes();
        var nowLength = this.timings.length;
        var newLength = times.length;
        var remain = this.maxQueueLength - nowLength;
        if (newLength < remain) {
            this.timings = this.timings.concat(times);
            this.offset += newLength;
        }
        else {
            var da = this.timings.concat(times.slice(0, remain)).map(this.formatTiming);
            this.report(da);
            this.timings = [];
            this.offset += remain;
        }
        setTimeout(function () {
            _this.collect();
        }, networkInterval);
    };
    // 上报
    ResourceTiming.prototype.report = function (data) {
        report({
            data: data,
            type: repTypes.APM,
            subType: repTypes.APM.subTypes.NETWORK,
        });
    };
    // 获取新的resourceTiming
    ResourceTiming.prototype.getTimes = function () {
        var _this = this;
        return performance.getEntries()
            .filter(function (item) { return !cleanWhiteList(item.name, _this.whiteList); })
            // paint类型无需网络请求
            .filter(function (item) { return item.entryType !== 'paint'; })
            .slice(this.offset);
    };
    // 整合数据
    ResourceTiming.prototype.formatTiming = function (item) {
        var data = {
            dnsTime: item.domainLookupEnd - item.domainLookupStart,
            connectionTime: item.connectEnd - item.connectStart,
            ttfb: item.responseStart - item.requestStart,
            latency: item.responseStart - item.fetchStart,
            contentTime: item.responseEnd - item.responseStart,
            responseHeaderCount: item.transferSize - item.encodedBodySize,
            responseBodyCount: item.encodedBodySize - 0,
        };
        cleanTime(data);
        data.url = cleanUrl(item.name);
        return formatTimeData(data);
    };
    return ResourceTiming;
}());
export default ResourceTiming;
