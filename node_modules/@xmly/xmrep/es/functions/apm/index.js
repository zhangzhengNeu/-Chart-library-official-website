import { __assign, __spreadArrays } from "tslib";
import { PageLoad } from "./page-load";
import { RequestHook } from "./request-hook";
import { ResourceTiming } from "./resource-timing";
import { defaultSampleRate, defaultMonitorWhiteList, maxMonitorQueueLength, } from "../../config";
import { getCustomCommon, setCustomCommon } from "../../share/data";
var init = function (_a) {
    var name = _a.name, _b = _a.type, type = _b === void 0 ? 6 : _b, _c = _a.sampleRate, sampleRate = _c === void 0 ? defaultSampleRate : _c, _d = _a.routeMap, routeMap = _d === void 0 ? function () { return "-"; } : _d, _e = _a.requestMonitorWhitelist, requestMonitorWhitelist = _e === void 0 ? [] : _e, _f = _a.maxRequestMonitorQueueLength, maxRequestMonitorQueueLength = _f === void 0 ? maxMonitorQueueLength : _f, _g = _a.resourceMonitorWhitelist, resourceMonitorWhitelist = _g === void 0 ? [] : _g, _h = _a.maxResourceMonitorQueueLength, maxResourceMonitorQueueLength = _h === void 0 ? maxMonitorQueueLength : _h;
    if (typeof name !== "string") {
        throw new Error("[xmrep#APM]: 配置项 name 是必填项且须为字符串类型");
    }
    var currentCommon = getCustomCommon() || {};
    setCustomCommon(__assign(__assign({}, currentCommon), { appName: name }));
    if (type & 2 && Math.random() <= sampleRate) {
        new PageLoad({ fnRouteMap: routeMap }).start();
    }
    if (type & 4 && Math.random() <= sampleRate) {
        new RequestHook({
            maxQueueLength: maxRequestMonitorQueueLength,
            whiteList: __spreadArrays(requestMonitorWhitelist, defaultMonitorWhiteList),
        }).start();
    }
    if (type & 8 && Math.random() <= sampleRate) {
        new ResourceTiming({
            maxQueueLength: maxResourceMonitorQueueLength,
            // resource性能数据包括api
            whiteList: __spreadArrays(resourceMonitorWhitelist, defaultMonitorWhiteList),
        }).start();
    }
};
export var apm = { init: init };
