/**
 * localStorage
 */
export var ls = {
    set: function (key, val) {
        try {
            if (val !== undefined && val !== '' && val !== null) {
                localStorage.setItem(key, JSON.stringify(val));
            }
            else {
                localStorage.removeItem(key);
            }
        }
        catch (e) { }
    },
    get: function (key) {
        try {
            var val = localStorage.getItem(key);
            var ret = val && JSON.parse(val);
            return val ? ret : null;
        }
        catch (e) { }
        return null;
    },
};
/**
 * sessionStorage
 */
export var ss = {
    set: function (key, val) {
        if (window.sessionStorage) {
            try {
                window.sessionStorage.setItem(key, val);
            }
            catch (e) { }
        }
    },
    get: function (key) {
        return window.sessionStorage ? window.sessionStorage.getItem(key) : null;
    },
    remove: function (key) {
        window.sessionStorage && window.sessionStorage.removeItem(key);
    },
};
/**
 * cookie
 */
export var cookie = {
    set: function (name, val, option) {
        var d;
        var domain = option && option.domain;
        var path = option && option.path || '/';
        if (/ximalaya\.com$/.test(window.location.hostname)) {
            domain = '.ximalaya.com';
        }
        if (option && option.expires) {
            d = new Date();
            d.setTime(d.getTime() + option.expires * 1000);
        }
        var cookieDomain = domain ? "; domain=" + domain : '';
        var cookieExpires = d ? "; expires=" + d.toUTCString() : '';
        var cookieSecure = option && option.secure ? '; secure' : '';
        var cookiePath = path ? "; path=" + path : '';
        var res = name + "=" + val + cookieDomain + cookiePath + cookieExpires + cookieSecure;
        document.cookie = res;
        return res;
    },
    get: function (name) {
        var reg = new RegExp("(^| )" + name + "=([^;]*)(;|$)");
        var re = reg.exec(document.cookie);
        return re ? re[2] : '';
    },
    remove: function (name) {
        this.set(name, '', { expires: -1000 });
    },
};
