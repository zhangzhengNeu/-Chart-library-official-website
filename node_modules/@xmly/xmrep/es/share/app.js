import generateUUID from './uuid';
import { nativeInfoCookieKey } from '../config';
import { uaFunc } from '../utils/ua';
import { cookie, ss } from '../utils/storage';
import { isUrlPar } from '../utils/url';
import { isWin } from '../utils/env';
import { getTimestamp } from '../utils/tool';
import pageData, { PRE_PAGE_KEY, PRE_MODULE_KEY } from './pageData';
/** bussinessId */
var bId;
// 设备id
var deviceId;
var appId;
var SSID_KEY = 'dimpa';
var SEQ_KEY = 'seq__';
var old = isWin ? ss.get(SSID_KEY) : 1;
var sid = old ? +old : 0;
export default function getSSID() {
    return sid;
}
// 设备识别
export var uuid = generateUUID();
/** 应用相关 */
export var info = {
    get appId() {
        return appId;
    },
    set appId(id) {
        id && (appId = id);
    },
    get bId() {
        return bId;
    },
    set bId(id) {
        id && (bId = id);
    },
    get deviceId() {
        return deviceId || uuid;
    },
    set deviceId(d) {
        d && (deviceId = d);
    },
    /** 设备类别 */
    get deviceType() {
        if (uaFunc.isWeixin()) {
            return 'weixin';
        }
        if (uaFunc.isIting()) {
            return uaFunc.isAndroid() ? 'android' : 'ios';
        }
        if (uaFunc.isSinaWeibo()) {
            return 'weibo';
        }
        if (uaFunc.isQQ()) {
            return 'qq';
        }
        return 'browser';
    },
    get sessionId() {
        if (!sid) {
            sid = getTimestamp();
            try {
                ss.set(SSID_KEY, "" + sid);
            }
            catch (e) { }
        }
        return sid;
    },
    set sessionId(s) {
        if (s) {
            sid = +s;
            ss.set(SSID_KEY, "" + s);
        }
    },
    set seq(s) {
        if (s) {
            ss.set(SEQ_KEY, "" + s);
        }
    },
    get seq() {
        if (uaFunc.isIting()) {
            var old_1 = +(ss.get(SEQ_KEY) || 0);
            var now = old_1 + 1;
            ss.set(SEQ_KEY, "" + now);
            return now;
        }
        return getTimestamp();
    },
};
// 如果在app内打开，初始化参数
export var initApp = function () {
    try {
        var str = cookie.get(nativeInfoCookieKey);
        if (str) {
            // app跳h5
            var infos_1 = "?" + decodeURIComponent(str);
            ['appId', 'deviceId', 'sessionId' /*, 'seq'*/].forEach(function (key) {
                info[key] = isUrlPar(key, infos_1);
            });
            pageData.prevPage = isUrlPar('currPage', infos_1);
            pageData.prevModule = isUrlPar('srcModule', infos_1);
            cookie.remove(nativeInfoCookieKey);
        }
        else {
            // app内h5跳h5
            var preP = ss.get(PRE_PAGE_KEY);
            var preM = ss.get(PRE_MODULE_KEY);
            if (preP) {
                pageData.prevPage = preP;
            }
            if (preM) {
                pageData.prevModule = preM;
            }
        }
    }
    catch (e) { }
};
